apiVersion: v1
kind: Namespace
metadata:
  name: iot
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: iot
spec:
  replicas: 1
  selector: {matchLabels: {app: api}}
  template:
    metadata: {labels: {app: api}}
    spec:
      containers:
        - name: api
          image: ghcr.io/tethralai/tetheritall-api:latest
          env:
            - {name: REDIS_URL, value: redis://redis:6379/0}
          ports: [{containerPort: 8000}]
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: iot
spec:
  selector: {app: api}
  ports:
    - {port: 8000, targetPort: 8000}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: integrations
  namespace: iot
spec:
  replicas: 1
  selector: {matchLabels: {app: integrations}}
  template:
    metadata: {labels: {app: integrations}}
    spec:
      containers:
        - name: integrations
          image: ghcr.io/tethralai/tetheritall-integrations:latest
          env:
            - {name: REDIS_URL, value: redis://redis:6379/0}
          ports: [{containerPort: 8100}]
---
apiVersion: v1
kind: Service
metadata:
  name: integrations
  namespace: iot
spec:
  selector: {app: integrations}
  ports:
    - {port: 8100, targetPort: 8100}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: iot
spec:
  replicas: 1
  selector: {matchLabels: {app: gateway}}
  template:
    metadata: {labels: {app: gateway}}
    spec:
      containers:
        - name: gateway
          image: ghcr.io/tethralai/tetheritall-gateway:latest
          env:
            - {name: API_TOKEN, valueFrom: {secretKeyRef: {name: api-token, key: token}}}
            - {name: REDIS_URL, value: redis://redis:6379/0}
            - {name: INTEGRATIONS_BASE_URL, value: http://integrations.iot.svc.cluster.local:8100}
          ports: [{containerPort: 8001}]
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: iot
spec:
  selector: {app: gateway}
  ports:
    - {port: 8001, targetPort: 8001}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: iot
spec:
  replicas: 1
  selector: {matchLabels: {app: redis}}
  template:
    metadata: {labels: {app: redis}}
    spec:
      containers:
        - name: redis
          image: redis:7-alpine
          ports: [{containerPort: 6379}]
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: iot
spec:
  selector: {app: redis}
  ports:
    - {port: 6379, targetPort: 6379}

