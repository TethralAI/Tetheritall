name: rotate-secrets

on:
  workflow_dispatch:
    inputs:
      new_api_token:
        description: 'New API token to add during rotation'
        required: true
      remove_old:
        description: 'Remove old API token after validation (true/false)'
        required: false
        default: 'false'
  schedule:
    - cron: '0 3 * * 1'

jobs:
  rotate:
    runs-on: ubuntu-latest
    steps:
      - name: Add API token to rotation set (Kubernetes secret)
        run: |
          echo "Scaffold: kubectl patch secret gateway-secrets to append API_TOKENS with new token"
          echo "kubectl -n iot patch secret gateway-secrets --type merge -p '{"'"'data'"'"': {"'"'api_tokens'"'"': "'"'$(echo -n "${{ github.event.inputs.new_api_token }},$EXISTING" | base64)"'"'}}'" 
      - name: Trigger JWKS refresh on gateway
        env:
          GATEWAY_BASE: ${{ secrets.SYNTHETICS_GATEWAY_BASE }}
          ADMIN_KEY: ${{ secrets.SYNTHETICS_API_TOKEN }}
        run: |
          curl -sS -X POST "$GATEWAY_BASE/admin/jwks/refresh" -H "x-api-key: $ADMIN_KEY" | jq . | cat
      - name: Validate traffic with both tokens (canary)
        env:
          GATEWAY_BASE: ${{ secrets.SYNTHETICS_GATEWAY_BASE }}
          OLD_KEY: ${{ secrets.SYNTHETICS_API_TOKEN }}
          NEW_KEY: ${{ github.event.inputs.new_api_token }}
        run: |
          set -e
          curl -sS "$GATEWAY_BASE/health" -H "x-api-key: $OLD_KEY" | cat
          curl -sS "$GATEWAY_BASE/health" -H "x-api-key: $NEW_KEY" | cat
      - name: Remove old API token (optional)
        if: ${{ github.event.inputs.remove_old == 'true' }}
        run: |
          echo "Scaffold: remove old token from API_TOKENS in Kubernetes secret and restart gateway"
      - name: mTLS cert reissue (manual step)
        run: |
          echo "Scaffold: create new client cert via cert-manager and update secret mounted by gateway"