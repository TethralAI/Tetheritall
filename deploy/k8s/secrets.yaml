apiVersion: v1
kind: Secret
metadata:
  name: aws-secret
  namespace: tethral
type: Opaque
data:
  # Base64 encoded values - replace with actual values
  access-key-id: QUtJQUlPU0ZPRE5ON0VYQU1QTEU=  # AKIAIOSFODNN7EXAMPLE
  secret-access-key: d0phbHJYVXRuRkVNSS9LN01ERU5HL2JQeFJmaUNZRVhBTVBMRUtFWQ==  # wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
  region: dXMtZWFzdC0x  # us-east-1
---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
  namespace: tethral
type: Opaque
data:
  # Base64 encoded database credentials
  database-url: cG9zdGdyZXNxbDovL3RldGhyYWxfdXNlcjp0ZXRocmFsX3Bhc3N3b3JkQHBvc3RncmVzOjU0MzIvdGV0aHJhbF9kYg==  # postgresql://tethral_user:tethral_password@postgres:5432/tethral_db
  username: dGV0aHJhbF91c2Vy  # tethral_user
  password: dGV0aHJhbF9wYXNzd29yZA==  # tethral_password
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: tethral
type: Opaque
data:
  # Base64 encoded Redis credentials
  redis-url: cmVkaXM6Ly9yZWRpczo2Mzc5  # redis://redis:6379
  password: dGV0aHJhbF9yZWRpc19wYXNzd29yZA==  # tethral_redis_password
---
apiVersion: v1
kind: Secret
metadata:
  name: api-secret
  namespace: tethral
type: Opaque
data:
  # Base64 encoded API token
  api-token: dGV0aHJhbF9hcGlfdG9rZW5fMTIzNA==  # tethral_api_token_1234
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: tethral
type: kubernetes.io/tls
data:
  # Replace with actual TLS certificate and key
  tls.crt: <base64-encoded-certificate>
  tls.key: <base64-encoded-private-key>
