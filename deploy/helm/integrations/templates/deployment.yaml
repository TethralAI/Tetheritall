apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "integrations.fullname" . }}
  labels:
    app: integrations
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: integrations
  template:
    metadata:
      labels:
        app: integrations
      annotations:
{{- toYaml .Values.podAnnotations | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName | default "integrations-sa" }}
      priorityClassName: app-standard
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values: ["integrations"]
                topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: integrations
      containers:
        - name: integrations
          image: {{ .Values.image }}{{ if .Values.imageDigest }}@{{ .Values.imageDigest }}{{ end }}
          imagePullPolicy: {{ .Values.imagePullPolicy | default "IfNotPresent" }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 10"]
          ports:
            - containerPort: {{ .Values.service.port }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.port }}
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.port }}
            failureThreshold: 30
            periodSeconds: 5
          env:
            - name: REDIS_URL
              value: {{ .Values.env.REDIS_URL | quote }}
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: {{ $.Values.global.otelExporter | quote }}
            - name: OTEL_SERVICE_NAME
              value: "integrations"
